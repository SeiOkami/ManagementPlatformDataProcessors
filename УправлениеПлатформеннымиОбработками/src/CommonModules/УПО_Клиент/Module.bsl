// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Перед началом работы системы.
Процедура ПередНачаломРаботыСистемы() Экспорт
	
	УПО_ВызовСервера.ПередНачаломРаботыСистемы();
	
КонецПроцедуры

// Открыть форму установки подмены.
// 
// Параметры:
//  ВерсияОбработки - СправочникСсылка.УПО_ВерсииПлатформенныхОбработок
//  ДляТекущегоПользователя - Булево
Процедура ОткрытьФормуУстановкиПодмены(ВерсияОбработки, ДляТекущегоПользователя) Экспорт
	
	ПараметрыФормы = УПО_ВызовСервера.ПараметрыОткрытияФормыУстановкиПодмены(
		ВерсияОбработки, ДляТекущегоПользователя);
	
	ОткрытьФорму(ПараметрыФормы.ИмяФормы, ПараметрыФормы);
	
КонецПроцедуры

// Спросить и подключить версию обработки для текущего сеанса.
// 
// Параметры:
//  ВерсияОбработки - СправочникСсылка.УПО_ВерсииПлатформенныхОбработок
Асинх Процедура СпроситьИПодключитьВерсиюОбработкиДляТекущегоСеанса(ВерсияОбработки) Экспорт
	
	// Способ передать управление вызывающему коду, который не ожидает результата. 
	// Используется, чтобы после записи и закрытии формы подмены вопрос не был закрыт вместе с ней
	Ждать 1; 
	
	ТекстВопроса = НСтр("ru='Подключить версию обработки для текущего сеанса?';
		|en='Connect the processing version for the current session?'");
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет); // КодВозвратаДиалога
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УПО_ВызовСервера.ПодключитьВерсиюОбработки(ВерсияОбработки);
	КонецЕсли;
	
КонецПроцедуры

// Оповестить об изменении данных подсистемы.
Процедура ОповеститьОбИзмененииДанныхПодсистемы() Экспорт
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.УПО_ПлатформенныеОбработки"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.УПО_ВерсииПлатформенныхОбработок"));
	
КонецПроцедуры

// Оповестить об изменении версии платформенных обработок.
// 
// Параметры:
//  Версия - СправочникСсылка.УПО_ВерсииПлатформенныхОбработок
Процедура ОповеститьОбИзмененииВерсииПлатформенныхОбработок(Версия) Экспорт
	
	Оповестить(КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок(), Версия);
	
КонецПроцедуры

// Обработать оповещение об изменении версии платформенных обработок.
// 
// Параметры:
//  Форма - см. Справочник.УПО_ВерсииПлатформенныхОбработок.Форма.ФормаЭлемента
//  ИмяСобытия - Строка
//  Параметр - Произвольный
//  Источник - Произвольный
Процедура ОбработатьОповещениеОбИзмененииВерсииПлатформенныхОбработок(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	 Если ИмяСобытия = КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок() 
	 	И Форма.Объект.Ссылка = Параметр Тогда
	 	
	 	Форма.Прочитать();
	 	
	 КонецЕсли;
	
КонецПроцедуры

// Выбрать файл и сохранить версию обработки.
// 
// Параметры:
//  ВерсияИлиФайлы - СправочникСсылка.УПО_ВерсииПлатформенныхОбработок - Версия или файлы
//  ДополнительныеПараметры - СправочникСсылка.УПО_ВерсииПлатформенныхОбработок
Процедура ВыбратьФайлИСохранитьВерсиюОбработки(ВерсияИлиФайлы, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(ВерсияИлиФайлы) = Тип("СправочникСсылка.УПО_ВерсииПлатформенныхОбработок") Тогда
		
		ДополнительныеПараметры = ВерсияИлиФайлы;
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыбратьФайлИСохранитьВерсиюОбработки", ЭтотОбъект, ДополнительныеПараметры);
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Фильтр = НСтр("ru='Обработка';en='Data processor'") + " (*.epf)|*.epf";
		ДиалогВыбораФайла.ПолноеИмяФайла = СтрШаблон("%1.epf", ВерсияИлиФайлы);
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
		
	ИначеЕсли ТипЗнч(ВерсияИлиФайлы) = Тип("Массив") И ЗначениеЗаполнено(ВерсияИлиФайлы) Тогда
		
		ИмяФайла    = ВерсияИлиФайлы[0]; // Строка
		ДанныеФайла = УПО_ВызовСервера.ДвоичныеДанныеВерсии(ДополнительныеПараметры);
		Если ТипЗнч(ДанныеФайла) = Тип("ДвоичныеДанные") Тогда
			ДанныеФайла.ЗаписатьАсинх(ИмяФайла);
		Иначе
			ТекстПредупреждения = НСтр("ru='Не удалось выгрузить версию. Нет данных обработки!';
				|en='Version could not be uploaded. No processing data!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		
	КонецЕсли; // BSLLS:IfElseIfEndsWithElse-off
	
КонецПроцедуры

// Задать вопрос и удалить данные подсистемы.
// 
// Параметры:
//  РезультатВопроса - Неопределено
//                   - КодВозвратаДиалога
//  ДополнительныеПараметры - Неопределено
Процедура ЗадатьВопросИУдалитьДанныеПодсистемы(
	РезультатВопроса = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если РезультатВопроса = Неопределено Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ЗадатьВопросИУдалитьДанныеПодсистемы", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru='Все данные подсистемы управления платформенными обработками БУДУТ УДАЛЕНЫ. Продолжить?';
			|en='All data from the platform processing management subsystem will be DELETED. Continue?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		УПО_ВызовСервера.УдалитьВсеДанныеПодсистемы();
		ОповеститьОбИзмененииДанныхПодсистемы();
		
	КонецЕсли; // BSLLS:IfElseIfEndsWithElse-off
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок()
	
	Возврат "КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок";
	
КонецФункции

#КонецОбласти
