// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет эталонные (предопределенные) данные
Процедура ЗаполнитьЭталонныеДанные() Экспорт
	
	ЭталонныеДанные = ЭталонныеДанные();
	Для Каждого ТекущиеДанные Из ЭталонныеДанные Цикл
		//@skip-check query-in-loop - ахтунг, запрос в цикле!
		СоздатьЭталонныйЭлемент(ТекущиеДанные);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Эталонные данные.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Эталонные данные:
//  * КлючевыеИмена - Строка
Функция ЭталонныеДанные()
	
	ТабличныйДокумент = ПолучитьМакет("ПредопределенныеДанные");
	
	ОбластьЯчеек   = ТабличныйДокумент.Область(1, 1, 
	ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);

    ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);

    ПостроительОтчета = Новый ПостроительОтчета;
    ПостроительОтчета.ИсточникДанных = ИсточникДанных;
    ПостроительОтчета.Выполнить();

    Возврат ПостроительОтчета.Результат.Выгрузить();
	
КонецФункции

// Создать эталонный элемент.
// 
// Параметры:
//  ОписаниеДанных - СтрокаТаблицыЗначений из см. ЭталонныеДанные
Процедура СоздатьЭталонныйЭлемент(ОписаниеДанных)
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор(ОписаниеДанных.УникальныйИдентификатор);
	ТекущаяСсылка = ПолучитьСсылку(УникальныйИдентификатор);
	Если СсылкаСуществует(ТекущаяСсылка) Тогда
		ТекущийОбъект = ТекущаяСсылка.ПолучитьОбъект();
	Иначе
		ТекущийОбъект = СоздатьЭлемент();
		ТекущийОбъект.УстановитьСсылкуНового(ТекущаяСсылка);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ТекущийОбъект, ОписаниеДанных);
	
	ТекущийОбъект.ИменаПодключения.Очистить();
	КлючевыеИмена = СтрРазделить(ОписаниеДанных.КлючевыеИмена, "," + Символы.ПС, Ложь);
	Для Каждого КлючевоеИмя Из КлючевыеИмена Цикл
		ТекущийОбъект.ИменаПодключения.Добавить().КлючевоеИмя = СокрЛП(КлючевоеИмя);
	КонецЦикла;
	
	ТекущийОбъект.Записать();
	
КонецПроцедуры

// Ссылка существует.
// 
// Параметры:
//  Ссылка - СправочникСсылка.ПлатформенныеОбработки
// 
// Возвращаемое значение:
//  Булево - Ссылка существует
Функция СсылкаСуществует(Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Справочник.ПлатформенныеОбработки
	|ГДЕ
	|	Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Возврат НЕ Запрос.Выполнить().Пустой();
		
КонецФункции

#КонецОбласти

#КонецЕсли