// @strict-types

#Область ОбработчикиСобытийФормы
 
// При создании на сервере.
// 
// Параметры:
//  Отказ - Булево - Отказ
//  СтандартнаяОбработка - Булево - Стандартная обработка
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВходящаяМодифицированность = Ложь;
	Если Параметры.Свойство("Модифицированность", ВходящаяМодифицированность) Тогда
		Модифицированность = ВходящаяМодифицированность;
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	Если НЕ ЗначениеЗаполнено(Запись.Владелец) 
		И Параметры.Свойство("ЗначенияЗаполнения", ПараметрыЗаполнения) Тогда
		ПараметрыЗаполнения.Свойство("Владелец", Запись.Владелец);
	КонецЕсли;
	
	ПодсистемаПользователейСуществует = УправлениеПлатформеннымиОбработками.ПодсистемаСуществуетБСП_Пользователи();
	
	ОбновитьПредставлениеПользователя();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ОбновитьПредставлениеПользователя();

КонецПроцедуры

// После записи.
// 
// Параметры:
//  ПараметрыЗаписи - Структура - Параметры записи
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	//@skip-check unknown-method-property
	Если НЕ ЗначениеЗаполнено(Запись.Владелец) 
		ИЛИ Запись.Владелец = УправлениеПлатформеннымиОбработкамиВызовСервера.ИдентификаторТекущегоПользователяИБ() Тогда
		
		УправлениеПлатформеннымиОбработкамиКлиент.СпроситьИПодключитьВерсиюОбработкиДляТекущегоСеанса(Запись.ВерсияОбработки);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПредставлениеПользователя();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеПользователяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ПодсистемаПользователейСуществует Тогда
		ИмяФормыВыбора = "Справочник.Пользователи.ФормаВыбора";
	Иначе
		ИмяФормыВыбора = "РегистрСведений.ПодменаПлатформенныхОбработок.ФормаВыбораПользователяИБ";
	КонецЕсли;
	
	ПараметрыВыбора = Новый Структура();
	ПараметрыВыбора.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыВыбора, Элементы.ПредставлениеПользователя);

КонецПроцедуры

// Представление пользователя обработка выбора.
// 
// Параметры:
//  Элемент - ПолеФормы -  Элемент
//  ВыбранноеЗначение - УникальныйИдентификатор, Структура - :
//  * ИдентификаторПользователяИБ - УникальныйИдентификатор
//  СтандартнаяОбработка - Булево -  Стандартная обработка
&НаКлиенте
Процедура ПредставлениеПользователяОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьНовогоВладельца(ВыбранноеЗначение);
	
	ОбновитьПредставлениеПользователя();

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПользователяОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Запись.Владелец = Неопределено;
	ОбновитьПредставлениеПользователя();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Установить нового владельца.
// 
// Параметры:
//  ВыбранноеЗначение - см. ПредставлениеПользователяОбработкаВыбора.ВыбранноеЗначение
&НаСервере
Процедура УстановитьНовогоВладельца(ВыбранноеЗначение)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("УникальныйИдентификатор") Тогда
		Запись.Владелец = ВыбранноеЗначение;
	ИначеЕсли ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Запись.Владелец = ВыбранноеЗначение.ИдентификаторПользователяИБ;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеПользователя()
	
	ПредставлениеПользователя = УправлениеПлатформеннымиОбработками.ПредставлениеПользователяИБ(Запись.Владелец);
	Элементы.Владелец.Видимость = ЗначениеЗаполнено(Запись.Владелец);
	
КонецПроцедуры

#КонецОбласти
