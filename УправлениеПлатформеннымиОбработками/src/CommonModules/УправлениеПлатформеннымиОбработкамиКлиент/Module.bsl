// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Перед началом работы системы.
Процедура ПередНачаломРаботыСистемы() Экспорт
	
	УправлениеПлатформеннымиОбработкамиВызовСервера.ПередНачаломРаботыСистемы();
	
КонецПроцедуры

// Открыть форму установки подмены.
// 
// Параметры:
//  ВерсияОбработки - СправочникСсылка.ВерсииПлатформенныхОбработок
//  ДляТекущегоПользователя - Булево
Процедура ОткрытьФормуУстановкиПодмены(ВерсияОбработки, ДляТекущегоПользователя) Экспорт
	
	ПараметрыФормы = УправлениеПлатформеннымиОбработкамиВызовСервера.ПараметрыОткрытияФормыУстановкиПодмены(
		ВерсияОбработки, ДляТекущегоПользователя);
	
	ОткрытьФорму("РегистрСведений.ПодменаПлатформенныхОбработок.ФормаЗаписи", ПараметрыФормы);
	
КонецПроцедуры

// Спросить и подключить версию обработки для текущего сеанса.
// 
// Параметры:
//  ВерсияИлиОтвет - СправочникСсылка.ВерсииПлатформенныхОбработок
//                 - КодВозвратаДиалога
//                 - Неопределено
//  ДополнительныеПараметры - Неопределено
//                          - Структура:
//                            *ВерсияОбработки - СправочникСсылка.ВерсииПлатформенныхОбработок
Процедура СпроситьИПодключитьВерсиюОбработкиДляТекущегоСеанса(
	ВерсияИлиОтвет = Неопределено, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(ВерсияИлиОтвет) = Тип("СправочникСсылка.ВерсииПлатформенныхОбработок") Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВерсияОбработки", ВерсияИлиОтвет);
		
		ОбработчикОповещения = Новый ОписаниеОповещения("СпроситьИПодключитьВерсиюОбработкиДляТекущегоСеанса", 
		УправлениеПлатформеннымиОбработкамиКлиент, ДополнительныеПараметры);
		
		ТекстВопроса = "Подключить версию обработки для текущего сеанса?";
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли ВерсияИлиОтвет = КодВозвратаДиалога.Да Тогда
		
		УправлениеПлатформеннымиОбработкамиВызовСервера.ПодключитьВерсиюОбработки(ДополнительныеПараметры.ВерсияОбработки);
		
	КонецЕсли;
	
КонецПроцедуры

// Оповестить об изменении данных подсистемы.
Процедура ОповеститьОбИзмененииДанныхПодсистемы() Экспорт
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.ПлатформенныеОбработки"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.ВерсииПлатформенныхОбработок"));
	
КонецПроцедуры

// Оповестить об изменении версии платформенных обработок.
// 
// Параметры:
//  Версия - СправочникСсылка.ВерсииПлатформенныхОбработок
Процедура ОповеститьОбИзмененииВерсииПлатформенныхОбработок(Версия) Экспорт
	
	Оповестить(КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок(), Версия);
	
КонецПроцедуры

// Обработать оповещение об изменении версии платформенных обработок.
// 
// Параметры:
//  Форма - см. Справочник.ВерсииПлатформенныхОбработок.Форма.ФормаЭлемента
//  ИмяСобытия - Строка
//  Параметр - Произвольный
//  Источник - Произвольный
Процедура ОбработатьОповещениеОбИзмененииВерсииПлатформенныхОбработок(Форма, ИмяСобытия, Параметр, Источник) Экспорт
	
	 Если ИмяСобытия = КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок() 
	 	И Форма.Объект.Ссылка = Параметр Тогда
	 	
	 	Форма.Прочитать();
	 	
	 КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок()
	
	Возврат "КлючОповещенияОбИзмененииВерсииПлатформенныхОбработок";
	
КонецФункции

#КонецОбласти
