// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Перед началом работы системы.
Процедура ПередНачаломРаботыСистемы() Экспорт

	Попытка
		УПО_Сервер.ОбновитьПлатформенныеОбработкиПриСменеВерсииПриложения();
	Исключение
		ДобавитьОшибкуВЖурнал(ИнформацияОбОшибке());
	КонецПопытки;
	
	Попытка
		УПО_Сервер.ПодменитьПлатформенныеОбработкиПередЗапускомСистемы();
	Исключение
		ДобавитьОшибкуВЖурнал(ИнформацияОбОшибке());
	КонецПопытки;

КонецПроцедуры

// Обновить платформенные обработки.
Процедура ОбновитьПлатформенныеОбработки() Экспорт
	
	УПО_Сервер.ОбновитьПлатформенныеОбработки();
	
КонецПроцедуры

// см. УПО_Сервер.ПодключитьВерсиюОбработки
Процедура ПодключитьВерсиюОбработки(ВерсияОбработки, КлючевоеИмя = "") Экспорт
	
	УПО_Сервер.ПодключитьВерсиюОбработки(ВерсияОбработки, КлючевоеИмя);
	
КонецПроцедуры

// см. УПО_Сервер.ПараметрыОткрытияФормыУстановкиПодмены
Функция ПараметрыОткрытияФормыУстановкиПодмены(ВерсияОбработки, ДляТекущегоПользователя) Экспорт
	
	Возврат УПО_Сервер.ПараметрыОткрытияФормыУстановкиПодмены(ВерсияОбработки, ДляТекущегоПользователя);
	
КонецФункции

// см. УПО_Сервер.ИдентификаторТекущегоПользователяИБ
Функция ИдентификаторТекущегоПользователяИБ() Экспорт
	
	Возврат УПО_Сервер.ИдентификаторТекущегоПользователяИБ();
	
КонецФункции

// см. УПО_Сервер.ДвоичныеДанныеВерсии
Функция ДвоичныеДанныеВерсии(Версия) Экспорт
	
	Возврат УПО_Сервер.ДвоичныеДанныеВерсии(Версия);
	
КонецФункции

// см. УПО_Сервер.ЭтоОригинальнаяВерсия
Функция ЭтоОригинальнаяВерсия(Версия) Экспорт
	
	Возврат УПО_Сервер.ЭтоОригинальнаяВерсия(Версия);
	
КонецФункции

// см. УПО_Сервер.УдалитьВсеДанныеПодсистемы
Процедура УдалитьВсеДанныеПодсистемы() Экспорт
	
	УПО_Сервер.УдалитьВсеДанныеПодсистемы();
	
КонецПроцедуры

// Добавить ошибку в журнал и вывести пользователю.
// 
// Параметры:
//  ИнформацияОбОшибке - Строка, ИнформацияОбОшибке - Информация об ошибке
//  СообщитьПользователю - Булево - Сообщать ли пользователю
Процедура ДобавитьОшибкуВЖурнал(ИнформацияОбОшибке, СообщитьПользователю = Истина) Экспорт
	
	СообщениеВЖурнал = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	ЗаписьЖурналаРегистрации(Метаданные.Подсистемы.УПО_УправлениеПлатформеннымиОбработками.Имя, 
		УровеньЖурналаРегистрации.Ошибка, , , СообщениеВЖурнал);
	
	Если СообщитьПользователю Тогда
		СообщениеПользователю = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		УПО_КлиентСервер.СообщитьПользователю(СообщениеПользователю);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
