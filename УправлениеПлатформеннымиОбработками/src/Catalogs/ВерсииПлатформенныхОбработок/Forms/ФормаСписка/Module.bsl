// @strict-types

#Область ОбработчикиСобытийФормы

// При создании на сервере.
// 
// Параметры:
//  Отказ - Булево - Отказ
//  СтандартнаяОбработка - Булево - Стандартная обработка
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    УправлениеПлатформеннымиОбработками.ИнициализироватьФормуВыбора(ЭтотОбъект);
	
	ОбновитьВладельцаСпискаНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокОбработки

// Список обработки при активизации строки.
// 
// Параметры:
//  Элемент - ТаблицаФормы - Элемент
&НаКлиенте
Процедура СписокОбработкиПриАктивизацииСтроки(Элемент)
	
    Обработка = ТекущаяОбработкаИзСписка();
	Если Обработка = ТекущаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяОбработка = Обработка;
	ПодключитьОбработчикОжидания("ОбновитьВладельцаСписка", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
 
// Обновить владельца списка на сервере.
&НаСервере
Процедура ОбновитьВладельцаСпискаНаСервере()

	Список.Параметры.УстановитьЗначениеПараметра("Владелец", ТекущаяОбработка);
	СписокПодмены.Параметры.УстановитьЗначениеПараметра("Обработка", ТекущаяОбработка);
	
КонецПроцедуры

// Обновить владельца списка.
&НаКлиенте
Процедура ОбновитьВладельцаСписка()
	
	ОбновитьВладельцаСпискаНаСервере();
	
КонецПроцедуры

// Текущая обработка из списка.
// 
// Возвращаемое значение:
//  СправочникСсылка.ПлатформенныеОбработки, Произвольный - Текущая обработка из списка
&НаКлиенте
Функция ТекущаяОбработкаИзСписка()
	
	Обработка = Элементы.СписокОбработки.ТекущаяСтрока;
	Если ТипЗнч(Обработка) <> Тип("СправочникСсылка.ПлатформенныеОбработки") Тогда
		Обработка = ПредопределенноеЗначение("Справочник.ПлатформенныеОбработки.ПустаяСсылка");
	КонецЕсли;
	
	Возврат Обработка;
	
КонецФункции

#КонецОбласти
